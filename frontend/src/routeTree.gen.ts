/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TravelImport } from './routes/travel'
import { Route as AuthLayoutImport } from './routes/_AuthLayout'
import { Route as AppLayoutImport } from './routes/_AppLayout'
import { Route as AppLayoutIndexImport } from './routes/_AppLayout/index'
import { Route as AuthLayoutRegisterImport } from './routes/_AuthLayout/register'
import { Route as AuthLayoutLoginImport } from './routes/_AuthLayout/login'
import { Route as AppLayoutSettingsImport } from './routes/_AppLayout/settings'
import { Route as AppLayoutSavedImport } from './routes/_AppLayout/saved'
import { Route as AppLayoutProfileImport } from './routes/_AppLayout/profile'
import { Route as AppLayoutPostImport } from './routes/_AppLayout/post'

// Create/Update Routes

const TravelRoute = TravelImport.update({
  path: '/travel',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_AuthLayout',
  getParentRoute: () => rootRoute,
} as any)

const AppLayoutRoute = AppLayoutImport.update({
  id: '/_AppLayout',
  getParentRoute: () => rootRoute,
} as any)

const AppLayoutIndexRoute = AppLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AuthLayoutRegisterRoute = AuthLayoutRegisterImport.update({
  path: '/register',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutLoginRoute = AuthLayoutLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AppLayoutSettingsRoute = AppLayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutSavedRoute = AppLayoutSavedImport.update({
  path: '/saved',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutProfileRoute = AppLayoutProfileImport.update({
  path: '/profile',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutPostRoute = AppLayoutPostImport.update({
  path: '/post',
  getParentRoute: () => AppLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_AppLayout': {
      id: '/_AppLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_AuthLayout': {
      id: '/_AuthLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/travel': {
      id: '/travel'
      path: '/travel'
      fullPath: '/travel'
      preLoaderRoute: typeof TravelImport
      parentRoute: typeof rootRoute
    }
    '/_AppLayout/post': {
      id: '/_AppLayout/post'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof AppLayoutPostImport
      parentRoute: typeof AppLayoutImport
    }
    '/_AppLayout/profile': {
      id: '/_AppLayout/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppLayoutProfileImport
      parentRoute: typeof AppLayoutImport
    }
    '/_AppLayout/saved': {
      id: '/_AppLayout/saved'
      path: '/saved'
      fullPath: '/saved'
      preLoaderRoute: typeof AppLayoutSavedImport
      parentRoute: typeof AppLayoutImport
    }
    '/_AppLayout/settings': {
      id: '/_AppLayout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppLayoutSettingsImport
      parentRoute: typeof AppLayoutImport
    }
    '/_AuthLayout/login': {
      id: '/_AuthLayout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLayoutLoginImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_AuthLayout/register': {
      id: '/_AuthLayout/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthLayoutRegisterImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_AppLayout/': {
      id: '/_AppLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppLayoutIndexImport
      parentRoute: typeof AppLayoutImport
    }
  }
}

// Create and export the route tree

interface AppLayoutRouteChildren {
  AppLayoutPostRoute: typeof AppLayoutPostRoute
  AppLayoutProfileRoute: typeof AppLayoutProfileRoute
  AppLayoutSavedRoute: typeof AppLayoutSavedRoute
  AppLayoutSettingsRoute: typeof AppLayoutSettingsRoute
  AppLayoutIndexRoute: typeof AppLayoutIndexRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppLayoutPostRoute: AppLayoutPostRoute,
  AppLayoutProfileRoute: AppLayoutProfileRoute,
  AppLayoutSavedRoute: AppLayoutSavedRoute,
  AppLayoutSettingsRoute: AppLayoutSettingsRoute,
  AppLayoutIndexRoute: AppLayoutIndexRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

interface AuthLayoutRouteChildren {
  AuthLayoutLoginRoute: typeof AuthLayoutLoginRoute
  AuthLayoutRegisterRoute: typeof AuthLayoutRegisterRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutLoginRoute: AuthLayoutLoginRoute,
  AuthLayoutRegisterRoute: AuthLayoutRegisterRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthLayoutRouteWithChildren
  '/travel': typeof TravelRoute
  '/post': typeof AppLayoutPostRoute
  '/profile': typeof AppLayoutProfileRoute
  '/saved': typeof AppLayoutSavedRoute
  '/settings': typeof AppLayoutSettingsRoute
  '/login': typeof AuthLayoutLoginRoute
  '/register': typeof AuthLayoutRegisterRoute
  '/': typeof AppLayoutIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthLayoutRouteWithChildren
  '/travel': typeof TravelRoute
  '/post': typeof AppLayoutPostRoute
  '/profile': typeof AppLayoutProfileRoute
  '/saved': typeof AppLayoutSavedRoute
  '/settings': typeof AppLayoutSettingsRoute
  '/login': typeof AuthLayoutLoginRoute
  '/register': typeof AuthLayoutRegisterRoute
  '/': typeof AppLayoutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_AppLayout': typeof AppLayoutRouteWithChildren
  '/_AuthLayout': typeof AuthLayoutRouteWithChildren
  '/travel': typeof TravelRoute
  '/_AppLayout/post': typeof AppLayoutPostRoute
  '/_AppLayout/profile': typeof AppLayoutProfileRoute
  '/_AppLayout/saved': typeof AppLayoutSavedRoute
  '/_AppLayout/settings': typeof AppLayoutSettingsRoute
  '/_AuthLayout/login': typeof AuthLayoutLoginRoute
  '/_AuthLayout/register': typeof AuthLayoutRegisterRoute
  '/_AppLayout/': typeof AppLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/travel'
    | '/post'
    | '/profile'
    | '/saved'
    | '/settings'
    | '/login'
    | '/register'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/travel'
    | '/post'
    | '/profile'
    | '/saved'
    | '/settings'
    | '/login'
    | '/register'
    | '/'
  id:
    | '__root__'
    | '/_AppLayout'
    | '/_AuthLayout'
    | '/travel'
    | '/_AppLayout/post'
    | '/_AppLayout/profile'
    | '/_AppLayout/saved'
    | '/_AppLayout/settings'
    | '/_AuthLayout/login'
    | '/_AuthLayout/register'
    | '/_AppLayout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  TravelRoute: typeof TravelRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppLayoutRoute: AppLayoutRouteWithChildren,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  TravelRoute: TravelRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_AppLayout",
        "/_AuthLayout",
        "/travel"
      ]
    },
    "/_AppLayout": {
      "filePath": "_AppLayout.tsx",
      "children": [
        "/_AppLayout/post",
        "/_AppLayout/profile",
        "/_AppLayout/saved",
        "/_AppLayout/settings",
        "/_AppLayout/"
      ]
    },
    "/_AuthLayout": {
      "filePath": "_AuthLayout.tsx",
      "children": [
        "/_AuthLayout/login",
        "/_AuthLayout/register"
      ]
    },
    "/travel": {
      "filePath": "travel.tsx"
    },
    "/_AppLayout/post": {
      "filePath": "_AppLayout/post.tsx",
      "parent": "/_AppLayout"
    },
    "/_AppLayout/profile": {
      "filePath": "_AppLayout/profile.tsx",
      "parent": "/_AppLayout"
    },
    "/_AppLayout/saved": {
      "filePath": "_AppLayout/saved.tsx",
      "parent": "/_AppLayout"
    },
    "/_AppLayout/settings": {
      "filePath": "_AppLayout/settings.tsx",
      "parent": "/_AppLayout"
    },
    "/_AuthLayout/login": {
      "filePath": "_AuthLayout/login.tsx",
      "parent": "/_AuthLayout"
    },
    "/_AuthLayout/register": {
      "filePath": "_AuthLayout/register.tsx",
      "parent": "/_AuthLayout"
    },
    "/_AppLayout/": {
      "filePath": "_AppLayout/index.tsx",
      "parent": "/_AppLayout"
    }
  }
}
ROUTE_MANIFEST_END */
